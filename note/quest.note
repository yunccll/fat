1. mountpoint  
    as old filesystem view   mountpoint is an file(dir)
    as new filesystem view  mountpoint is an root file(dir)

    what the ops of mountpoint directory
    struct file -- dir_file->f_ops
    struct inode: -- dir_inode->i_ops
    struct dentry -- 
    struct super --

    how  to map the real-ops of the mountpoint from old-to-new ???

2. thread-safe of sys_read , sys_write (atomic????)
    sys_read  -> vfs_read  (call low-level readPage of struct address_space
    sys_write -> vfs_write (call low-level writePage of struct address_space

    write:
        get one page with lock
        and call low-level writePage
        it's safe if writePage imp of the fs is thread-safe , such as ext4 imp is safe

    so -> using lock is better in application
    
3. about fat_inode in fat code
    fat_inode 在fat_fill_super时创建，
    在fatents中使用，基本只是在sync时 用到。
    但是，没看到初始化的代码。针对sync的操作。

    猜测： fat_inode代表了fat的几个扇区的read和write的操作。
    想重用VFS的page cache来进行 读写扇区的操作。所以，只创建inode和初始化address_space，即可达到目的


4. what is effect of inode->i_nlink 

5. inode's hash ????
    mark_inode_dirty_sync -call-> __mark_inode_dirty 's comment:  inode must be hashed 
    what 's the inode hashing
